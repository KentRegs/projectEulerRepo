num = '''7316717653133062491922511967442657474235534919493\
4969835203127745063262395783180169848018694788518438586156\
0789112949495459501737958331952853208805511125406987471585\
2386305071569329096329522744304355766896648950445244523161\
7318564030987111217223831136222989342338030813533627661428\
2806444486645238749303589072962904915604407723907138105158\
5930796086670172427121883998797908792274921901699720888093\
7766572733300105336788122023542180975125454059475224352584\
9077116705560136048395864467063244157221553975369781797784\
6174064955149290862569321978468622482839722413756570560574\
9026140797296865241453510047482166370484403199890008895243\
4506585412275886668811642717147992444292823086346567481391\
9123162824586178664583591245665294765456828489128831426076\
9004224219022671055626321111109370544217506941658960408071\
9840385096245544436298123098787992724428490918884580156166\
0979191338754992005240636899125607176060588611646710940507\
7541002256983155200055935729725716362695618826704282524836\
00823257530420752963450'''

lrgProd = 0
digits = [int(i) for i in str(num)]
a = 0
b = 1
c = 2
d = 3
e = 4
f = 5
g = 6
h = 7
i = 8
j = 9
k = 10
l = 11
m = 12

while m < 1000:
    temp = digits[a] * digits[b] * digits[c] * digits[d] \
        * digits[e] * digits[f] * digits[g] * digits[h] * \
        digits[i] * digits[j] * digits[k] * digits[l] * digits[m]
    a += 1
    b += 1
    c += 1
    d += 1
    e += 1
    f += 1
    g += 1
    h += 1
    i += 1
    j += 1
    k += 1
    l += 1
    m += 1

    if lrgProd < temp:
        lrgProd = temp
        fa = a-1
        fb = b-1
        fc = c-1
        fd = d-1
        fe = e-1
        ff = f-1
        fg = g-1
        fh = h-1
        fi = i-1
        fj = j-1
        fk = k-1
        fl = l-1
        fm = m-1

print('13 adjacent digits in the 1000-digit number that have \
the greatest product = %d %d %d %d %d %d %d %d %d %d %d %d %d' \
      %(digits[fa], digits[fb], digits[fc], digits[fd], \
      digits[fe], digits[ff], digits[fg], digits[fh], \
      digits[fi], digits[fj], digits[fk], digits[fl], digits[fm]))
print('Product = %d' %lrgProd)
